--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -791,10 +791,11 @@ endif()
 
 if(USE_ITT)
   find_package(ITT)
-  if(ITT_FOUND)
-    include_directories(SYSTEM ${ITT_INCLUDE_DIR})
-    list(APPEND Caffe2_DEPENDENCY_LIBS ${ITT_LIBRARIES})
-    list(APPEND TORCH_PYTHON_LINK_LIBRARIES ${ITT_LIBRARIES})
+  if(1)
+    message(WARNING "No ITT")
+    #include_directories(SYSTEM ${ITT_INCLUDE_DIR})
+    #list(APPEND Caffe2_DEPENDENCY_LIBS ${ITT_LIBRARIES})
+    #list(APPEND TORCH_PYTHON_LINK_LIBRARIES ${ITT_LIBRARIES})
   else()
     message(WARNING "Not compiling with ITT. Suppress this warning with -DUSE_ITT=OFF")
     set(USE_ITT OFF CACHE BOOL "" FORCE)
@@ -1156,12 +1157,10 @@ if(USE_DISTRIBUTED AND USE_TENSORPIPE)
     endif()
     set(TP_BUILD_LIBUV ON CACHE BOOL "" FORCE)
     add_compile_options(-DTORCH_USE_LIBUV)
-    include_directories(BEFORE SYSTEM ${CMAKE_CURRENT_LIST_DIR}/../third_party/tensorpipe/third_party/libuv/include)
     set(TP_STATIC_OR_SHARED STATIC CACHE STRING "" FORCE)
 
     # Tensorpipe uses cuda_add_library
     torch_update_find_cuda_flags()
-    add_subdirectory(${PROJECT_SOURCE_DIR}/third_party/tensorpipe)
 
     list(APPEND Caffe2_DEPENDENCY_LIBS tensorpipe)
     list(APPEND Caffe2_DEPENDENCY_LIBS nlohmann)
@@ -1519,7 +1518,6 @@ endif()
 #
 set(TEMP_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
 set(BUILD_SHARED_LIBS OFF CACHE BOOL "Build shared libs" FORCE)
-add_subdirectory(${PROJECT_SOURCE_DIR}/third_party/fmt)
 
 # Disable compiler feature checks for `fmt`.
 #
@@ -1528,9 +1526,8 @@ add_subdirectory(${PROJECT_SOURCE_DIR}/third_party/fmt)
 # CMAKE_CXX_FLAGS in ways that break feature checks. Since we already know
 # `fmt` is compatible with a superset of the compilers that PyTorch is, it
 # shouldn't be too bad to just disable the checks.
-set_target_properties(fmt-header-only PROPERTIES INTERFACE_COMPILE_FEATURES "")
-
-list(APPEND Caffe2_DEPENDENCY_LIBS fmt::fmt-header-only)
+find_package(fmt REQUIRED)
+list(APPEND Caffe2_DEPENDENCY_LIBS fmt::fmt)
 set(BUILD_SHARED_LIBS ${TEMP_BUILD_SHARED_LIBS} CACHE BOOL "Build shared libs" FORCE)
 
 # ---[ Kineto
