diff --git a/contrib/CMakeLists.txt b/contrib/CMakeLists.txt
index d6833e8..e2932f8 100644
--- a/contrib/CMakeLists.txt
+++ b/contrib/CMakeLists.txt
@@ -17,8 +17,8 @@ get_filename_component(gemmlowp_src ${gemmlowp_SOURCE_DIR} PATH)
 
- if(WIN32)
+ if(MSVC)
   # one can enable simd from the cmake command line, ie -DCMAKE_CXX_FLAGS="/arch:AVX2
   add_definitions(-DNOMINMAX -DWIN64 -DWIN32_LEAN_AND_MEAN -DNOGDI)
   add_definitions(/bigobj /nologo /EHsc /GF /MP /Gm- /wd4800 /wd4805 /wd4244)
   if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     # if we compile for windows with clang, allow inline asm
     add_definitions(-DGEMMLOWP_ALLOW_INLINE_ASM)


@@ -47,12 +47,8 @@ list(APPEND gemmlowp_test_headers ${gemmlowp_headers})
 file(GLOB fixedpoint_private_headers "${gemmlowp_src}/fixedpoint/*.h")
 list(APPEND fixedpoint_private_headers "${gemmlowp_src}/internal/common.h")
 
-# Eight bit int gemm library
-if(WIN32)
-    add_library(eight_bit_int_gemm STATIC ${eight_bit_int_gemm_sources_with_no_headers})
-else()
-    add_library(eight_bit_int_gemm SHARED ${eight_bit_int_gemm_sources_with_no_headers})
-endif()
+add_library(eight_bit_int_gemm ${eight_bit_int_gemm_sources_with_no_headers})
+set_target_properties(eight_bit_int_gemm PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS ON)
 target_link_libraries(eight_bit_int_gemm ${EXTERNAL_LIBRARIES})
 
 # INTERFACE target to help header include
